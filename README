NAME
    Devel::SmallProf - per-line Perl profiler

SYNOPSIS
            perl5 -d:SmallProf test.pl

DESCRIPTION
    The Devel::SmallProf is a small profiler which I find useful (or at
    least interesting :-) when used in conjuction with Devel::DProf. It
    collects statistics on the run times of the lines in the various files
    being run. Those statistics are placed in the file smallprof.out in the
    following format: <num> <time> <file>:<line>:<text>

    where <num> is the number of times that the line was executed, <time> is
    the amount of time spent executing it and <file>, <line> and <text> are
    the filename, the line number and the actual text of the executed line
    (read from the file).

    Eval lines print <num> and <time> like the others, but also print the
    package, the eval number and, if possible, the text of the line.

    The package uses the debugging hooks in Perl and thus needs the -d
    switch, so to profile test.pl, use the command:

            perl5 -d:SmallProf test.pl

    Once the script is done, the statistics in smallprof.out can be sorted
    to show which lines took the most time. The output can be sorted to find
    which lines take the longest, either with the sort command:

            sort -nrk 2 smallprof.out | less

    or a perl script:

            open(PROF,"smallprof.out");
            @sorted = sort {(split(/\s+/,$b))[2] <=> 
                            (split(/\s+/,$a))[2]} <PROF>;
            close PROF;
            print join('',@sorted);

NOTES
    *   Determining the accuracy or signifiance of the results is left as an
        exercise for the reader. I've tried to keep the timings pretty much
        just to the profiled code, but no guarantees of any kind are made.

    *   SmallProf does attempt to make up for its shortcomings by subtracting a
        small amount from each timing (null time compensation). This should
        help somewhat with the accuracy.

    *   SmallProf depends on the Time::HiRes package to do its timings except
        for the Win32 version which depends on Win32::API.

    *   If you do not wish to see lines which were never called, set the
        variable `$DB::drop_zeros = 1'.

INSTALLATION
    Makefile.PL checks to see if this is a Win32 platform and runs a
    conversion script on SmallProf prior to installation. I've not been able
    to test this, but have hopes that it will install on most platforms
    smoothly. As always, please let me know.

BUGS
    The handling of evals is better than version 0.1, but still poor. For
    some reason, the `@{'_<filename'}' array for some evals is empty. When
    this is true, there isn't a lot that can be done.

    The conversion to the Win32 version is done during the call to
    Makefile.PL. This seems fairly inappropriate, but I'm not sure where
    better to do it.

    Comments, advice and questions are welcome. If you see inefficent stuff
    in this module and have a better way, please let me know.

AUTHOR
 
Ted Ashton <ashted@southern.edu>
 
SmallProf was developed from code orignally posted to usenet by Philippe
Verdret.
 
Copyright (c) 1997 Ted Ashton
 
This module is free software and can be redistributed and/or modified under the
same terms as Perl itself.
SEE ALSO
    the Devel::DProf manpage, the gettimeofday() manpage

